%define base_name __BASENAME__
%define nodejs_modulesdir %{_libdir}/node_modules/npm/node_modules

# to avoid empty debugfiles error on some distros
%global debug_package %{nil}

Name:            nodejs-%{base_name}
Version:         __VERSION__
Release:         0
License:         __LICENSE__
Summary:         __SUMMARY__
URL:             __URL__
Group:           Development/Languages/Other
Source0:         http://registry.npmjs.org/%{base_name}/-/%{base_name}-%{version}.tgz
Requires:        nodejs
BuildRequires:   nodejs
BuildRequires:   nodejs-packaging
%if ! %{defined fedora}
BuildRequires:	 npm
%endif
BuildRoot:       %{_tmppath}/%{name}-%{version}-%{release}-root
#BuildArch:       noarch
ExclusiveArch:   %{ix86} x86_64 %{arm} noarch
Provides:	 npm(%{base_name}) = %{version}
__REQUIRES__

%description
__DESCRIPTION__

%prep
%setup -q -n package

%build

%install
mkdir -p %{buildroot}%{nodejs_modulesdir}/%{base_name}
mv -f package.json \
        %{buildroot}%{nodejs_modulesdir}/%{base_name}

cp -prf * \
        %{buildroot}%{nodejs_modulesdir}/%{base_name}

%clean
rm -rf $RPM_BUILD_ROOT

%post 

# if it's an installation, register it with npm
if [ $1 == 1 ]; then
	cd %{nodejs_modulesdir}
	npm install %{base_name} --save
fi

%postun

# if it's an uninstallation, unregister from npm
if [ $1 == 0 ]; then
	cd %{nodejs_modulesdir}
	npm uninstall %{base_name} --save
fi

%changelog

%files
%defattr(0644,root,root,-)
%{nodejs_modulesdir}/%{base_name}/*
%dir %{nodejs_modulesdir}/%{base_name}
__DOC__


